Useless nonterminals

   declaration_list
   declaration_list_opt


Terminals which are not used

   PUNC
   MULTI_COMM
   SINGLE_COMM
   WS
   PTR_OPT


Useless rules

   80 declaration_list: declaration
   81                 | declaration_list declaration

   82 declaration_list_opt: declaration_list


State 132 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: ID
    2                   | INT_CONST
    3                   | CHAR_CONST
    4                   | STR_LIT
    5                   | '(' expression ')'

    6 postfix_expression: primary_expression
    7                   | postfix_expression '[' expression ']'
    8                   | postfix_expression '(' argument_expression_list_opt ')'

    9 argument_expression_list_opt: argument_expression_list

   10 argument_expression_list: assignment_expression
   11                         | argument_expression_list ',' assignment_expression

   12 unary_operator: '&'
   13               | '*'
   14               | '-'
   15               | '!'

   16 unary_expression: postfix_expression
   17                 | unary_operator unary_expression

   18 multiplicative_expression: unary_expression
   19                          | multiplicative_expression '*' unary_expression
   20                          | multiplicative_expression '/' unary_expression
   21                          | multiplicative_expression '%' unary_expression

   22 additive_expression: multiplicative_expression
   23                    | additive_expression '+' multiplicative_expression
   24                    | additive_expression '-' multiplicative_expression

   25 relational_expression: additive_expression
   26                      | relational_expression '<' additive_expression
   27                      | relational_expression '>' additive_expression
   28                      | relational_expression LE_OPT additive_expression
   29                      | relational_expression GE_OPT additive_expression

   30 equality_expression: relational_expression
   31                    | equality_expression EQ_OPT relational_expression
   32                    | equality_expression NE_OPT relational_expression

   33 logical_AND_expression: equality_expression
   34                       | logical_AND_expression AND_OPT equality_expression

   35 logical_OR_expression: logical_AND_expression
   36                      | logical_OR_expression OR_OPT logical_AND_expression

   37 conditional_expression: logical_OR_expression
   38                       | logical_OR_expression '?' expression ':' conditional_expression

   39 assignment_expression: conditional_expression
   40                      | unary_expression '=' assignment_expression

   41 expression: assignment_expression

   42 declaration: type_specifier init_declarator ';'

   43 init_declarator: declarator
   44                | declarator '=' initializer

   45 type_specifier: VOID
   46               | CHAR
   47               | INT

   48 declarator: pointer_opt direct_declarator

   49 direct_declarator: ID
   50                  | ID '[' INT_CONST ']'
   51                  | ID '(' parameter_list_opt ')'

   52 pointer: '*'

   53 pointer_opt: pointer

   54 parameter_list: parameter_declaration
   55               | parameter_list ',' parameter_declaration

   56 parameter_list_opt: parameter_list

   57 parameter_declaration: type_specifier pointer_opt identifier_opt

   58 identifier_opt: ID

   59 initializer: assignment_expression

   60 statement: compound_statement
   61          | expression_statement
   62          | selection_statement
   63          | iteration_statement
   64          | jump_statement

   65 compound_statement: '{' block_item_list_opt '}'

   66 block_item_list_opt: block_item_list

   67 block_item_list: block_item
   68                | block_item_list block_item

   69 block_item: declaration
   70           | statement

   71 expression_statement: expression_opt ';'

   72 selection_statement: IF '(' expression ')' statement
   73                    | IF '(' expression ')' statement ELSE statement

   74 expression_opt: expression

   75 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

   76 jump_statement: RET expression_opt ';'

   77 translation_unit: function_definition
   78                 | declaration

   79 function_definition: type_specifier declarator compound_statement


Terminals, with rules where they appear

$end (0) 0
'!' (33) 15
'%' (37) 21
'&' (38) 12
'(' (40) 5 8 51 72 73 75
')' (41) 5 8 51 72 73 75
'*' (42) 13 19 52
'+' (43) 23
',' (44) 11 55
'-' (45) 14 24
'/' (47) 20
':' (58) 38
';' (59) 42 71 75 76
'<' (60) 26
'=' (61) 40 44
'>' (62) 27
'?' (63) 38
'[' (91) 7 50
']' (93) 7 50
'{' (123) 65
'}' (125) 65
error (256)
CHAR (258) 46
ELSE (259) 73
FOR (260) 75
IF (261) 72 73
INT (262) 47
RET (263) 76
VOID (264) 45
ID (265) 1 49 50 51 58
INT_CONST (266) 2 50
CHAR_CONST (267) 3
STR_LIT (268) 4
PUNC (269)
MULTI_COMM (270)
SINGLE_COMM (271)
WS (272)
EQ_OPT (273) 31
LE_OPT (274) 28
GE_OPT (275) 29
NE_OPT (276) 32
AND_OPT (277) 34
PTR_OPT (278)
OR_OPT (279) 36


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
primary_expression (46)
    on left: 1 2 3 4 5, on right: 6
postfix_expression (47)
    on left: 6 7 8, on right: 7 8 16
argument_expression_list_opt (48)
    on left: 9, on right: 8
argument_expression_list (49)
    on left: 10 11, on right: 9 11
unary_operator (50)
    on left: 12 13 14 15, on right: 17
unary_expression (51)
    on left: 16 17, on right: 17 18 19 20 21 40
multiplicative_expression (52)
    on left: 18 19 20 21, on right: 19 20 21 22 23 24
additive_expression (53)
    on left: 22 23 24, on right: 23 24 25 26 27 28 29
relational_expression (54)
    on left: 25 26 27 28 29, on right: 26 27 28 29 30 31 32
equality_expression (55)
    on left: 30 31 32, on right: 31 32 33 34
logical_AND_expression (56)
    on left: 33 34, on right: 34 35 36
logical_OR_expression (57)
    on left: 35 36, on right: 36 37 38
conditional_expression (58)
    on left: 37 38, on right: 38 39
assignment_expression (59)
    on left: 39 40, on right: 10 11 40 41 59
expression (60)
    on left: 41, on right: 5 7 38 72 73 74
declaration (61)
    on left: 42, on right: 69 78
init_declarator (62)
    on left: 43 44, on right: 42
type_specifier (63)
    on left: 45 46 47, on right: 42 57 79
declarator (64)
    on left: 48, on right: 43 44 79
direct_declarator (65)
    on left: 49 50 51, on right: 48
pointer (66)
    on left: 52, on right: 53
pointer_opt (67)
    on left: 53, on right: 48 57
parameter_list (68)
    on left: 54 55, on right: 55 56
parameter_list_opt (69)
    on left: 56, on right: 51
parameter_declaration (70)
    on left: 57, on right: 54 55
identifier_opt (71)
    on left: 58, on right: 57
initializer (72)
    on left: 59, on right: 44
statement (73)
    on left: 60 61 62 63 64, on right: 70 72 73 75
compound_statement (74)
    on left: 65, on right: 60 79
block_item_list_opt (75)
    on left: 66, on right: 65
block_item_list (76)
    on left: 67 68, on right: 66 68
block_item (77)
    on left: 69 70, on right: 67 68
expression_statement (78)
    on left: 71, on right: 61
selection_statement (79)
    on left: 72 73, on right: 62
expression_opt (80)
    on left: 74, on right: 71 75 76
iteration_statement (81)
    on left: 75, on right: 63
jump_statement (82)
    on left: 76, on right: 64
translation_unit (83)
    on left: 77 78, on right: 0
function_definition (84)
    on left: 79, on right: 77


state 0

    0 $accept: . translation_unit $end

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    declaration          go to state 4
    type_specifier       go to state 5
    translation_unit     go to state 6
    function_definition  go to state 7


state 1

   46 type_specifier: CHAR .

    $default  reduce using rule 46 (type_specifier)


state 2

   47 type_specifier: INT .

    $default  reduce using rule 47 (type_specifier)


state 3

   45 type_specifier: VOID .

    $default  reduce using rule 45 (type_specifier)


state 4

   78 translation_unit: declaration .

    $default  reduce using rule 78 (translation_unit)


state 5

   42 declaration: type_specifier . init_declarator ';'
   79 function_definition: type_specifier . declarator compound_statement

    '*'  shift, and go to state 8

    init_declarator  go to state 9
    declarator       go to state 10
    pointer          go to state 11
    pointer_opt      go to state 12


state 6

    0 $accept: translation_unit . $end

    $end  shift, and go to state 13


state 7

   77 translation_unit: function_definition .

    $default  reduce using rule 77 (translation_unit)


state 8

   52 pointer: '*' .

    $default  reduce using rule 52 (pointer)


state 9

   42 declaration: type_specifier init_declarator . ';'

    ';'  shift, and go to state 14


state 10

   43 init_declarator: declarator .
   44                | declarator . '=' initializer
   79 function_definition: type_specifier declarator . compound_statement

    '='  shift, and go to state 15
    '{'  shift, and go to state 16

    $default  reduce using rule 43 (init_declarator)

    compound_statement  go to state 17


state 11

   53 pointer_opt: pointer .

    $default  reduce using rule 53 (pointer_opt)


state 12

   48 declarator: pointer_opt . direct_declarator

    ID  shift, and go to state 18

    direct_declarator  go to state 19


state 13

    0 $accept: translation_unit $end .

    $default  accept


state 14

   42 declaration: type_specifier init_declarator ';' .

    $default  reduce using rule 42 (declaration)


state 15

   44 init_declarator: declarator '=' . initializer

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 40
    initializer                go to state 41


state 16

   65 compound_statement: '{' . block_item_list_opt '}'

    CHAR        shift, and go to state 1
    FOR         shift, and go to state 42
    IF          shift, and go to state 43
    INT         shift, and go to state 2
    RET         shift, and go to state 44
    VOID        shift, and go to state 3
    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28
    '{'         shift, and go to state 16

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 46
    declaration                go to state 47
    type_specifier             go to state 48
    statement                  go to state 49
    compound_statement         go to state 50
    block_item_list_opt        go to state 51
    block_item_list            go to state 52
    block_item                 go to state 53
    expression_statement       go to state 54
    selection_statement        go to state 55
    expression_opt             go to state 56
    iteration_statement        go to state 57
    jump_statement             go to state 58


state 17

   79 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 79 (function_definition)


state 18

   49 direct_declarator: ID .
   50                  | ID . '[' INT_CONST ']'
   51                  | ID . '(' parameter_list_opt ')'

    '('  shift, and go to state 59
    '['  shift, and go to state 60

    $default  reduce using rule 49 (direct_declarator)


state 19

   48 declarator: pointer_opt direct_declarator .

    $default  reduce using rule 48 (declarator)


state 20

    1 primary_expression: ID .

    $default  reduce using rule 1 (primary_expression)


state 21

    2 primary_expression: INT_CONST .

    $default  reduce using rule 2 (primary_expression)


state 22

    3 primary_expression: CHAR_CONST .

    $default  reduce using rule 3 (primary_expression)


state 23

    4 primary_expression: STR_LIT .

    $default  reduce using rule 4 (primary_expression)


state 24

    5 primary_expression: '(' . expression ')'

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 61


state 25

   12 unary_operator: '&' .

    $default  reduce using rule 12 (unary_operator)


state 26

   13 unary_operator: '*' .

    $default  reduce using rule 13 (unary_operator)


state 27

   14 unary_operator: '-' .

    $default  reduce using rule 14 (unary_operator)


state 28

   15 unary_operator: '!' .

    $default  reduce using rule 15 (unary_operator)


state 29

    6 postfix_expression: primary_expression .

    $default  reduce using rule 6 (postfix_expression)


state 30

    7 postfix_expression: postfix_expression . '[' expression ']'
    8                   | postfix_expression . '(' argument_expression_list_opt ')'
   16 unary_expression: postfix_expression .

    '('  shift, and go to state 62
    '['  shift, and go to state 63

    $default  reduce using rule 16 (unary_expression)


state 31

   17 unary_expression: unary_operator . unary_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression  go to state 29
    postfix_expression  go to state 30
    unary_operator      go to state 31
    unary_expression    go to state 64


state 32

   18 multiplicative_expression: unary_expression .
   40 assignment_expression: unary_expression . '=' assignment_expression

    '='  shift, and go to state 65

    $default  reduce using rule 18 (multiplicative_expression)


state 33

   19 multiplicative_expression: multiplicative_expression . '*' unary_expression
   20                          | multiplicative_expression . '/' unary_expression
   21                          | multiplicative_expression . '%' unary_expression
   22 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 22 (additive_expression)


state 34

   23 additive_expression: additive_expression . '+' multiplicative_expression
   24                    | additive_expression . '-' multiplicative_expression
   25 relational_expression: additive_expression .

    '-'  shift, and go to state 69
    '+'  shift, and go to state 70

    $default  reduce using rule 25 (relational_expression)


state 35

   26 relational_expression: relational_expression . '<' additive_expression
   27                      | relational_expression . '>' additive_expression
   28                      | relational_expression . LE_OPT additive_expression
   29                      | relational_expression . GE_OPT additive_expression
   30 equality_expression: relational_expression .

    LE_OPT  shift, and go to state 71
    GE_OPT  shift, and go to state 72
    '<'     shift, and go to state 73
    '>'     shift, and go to state 74

    $default  reduce using rule 30 (equality_expression)


state 36

   31 equality_expression: equality_expression . EQ_OPT relational_expression
   32                    | equality_expression . NE_OPT relational_expression
   33 logical_AND_expression: equality_expression .

    EQ_OPT  shift, and go to state 75
    NE_OPT  shift, and go to state 76

    $default  reduce using rule 33 (logical_AND_expression)


state 37

   34 logical_AND_expression: logical_AND_expression . AND_OPT equality_expression
   35 logical_OR_expression: logical_AND_expression .

    AND_OPT  shift, and go to state 77

    $default  reduce using rule 35 (logical_OR_expression)


state 38

   36 logical_OR_expression: logical_OR_expression . OR_OPT logical_AND_expression
   37 conditional_expression: logical_OR_expression .
   38                       | logical_OR_expression . '?' expression ':' conditional_expression

    OR_OPT  shift, and go to state 78
    '?'     shift, and go to state 79

    $default  reduce using rule 37 (conditional_expression)


state 39

   39 assignment_expression: conditional_expression .

    $default  reduce using rule 39 (assignment_expression)


state 40

   59 initializer: assignment_expression .

    $default  reduce using rule 59 (initializer)


state 41

   44 init_declarator: declarator '=' initializer .

    $default  reduce using rule 44 (init_declarator)


state 42

   75 iteration_statement: FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 80


state 43

   72 selection_statement: IF . '(' expression ')' statement
   73                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 81


state 44

   76 jump_statement: RET . expression_opt ';'

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 46
    expression_opt             go to state 82


state 45

   41 expression: assignment_expression .

    $default  reduce using rule 41 (expression)


state 46

   74 expression_opt: expression .

    $default  reduce using rule 74 (expression_opt)


state 47

   69 block_item: declaration .

    $default  reduce using rule 69 (block_item)


state 48

   42 declaration: type_specifier . init_declarator ';'

    '*'  shift, and go to state 8

    init_declarator  go to state 9
    declarator       go to state 83
    pointer          go to state 11
    pointer_opt      go to state 12


state 49

   70 block_item: statement .

    $default  reduce using rule 70 (block_item)


state 50

   60 statement: compound_statement .

    $default  reduce using rule 60 (statement)


state 51

   65 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 84


state 52

   66 block_item_list_opt: block_item_list .
   68 block_item_list: block_item_list . block_item

    CHAR        shift, and go to state 1
    FOR         shift, and go to state 42
    IF          shift, and go to state 43
    INT         shift, and go to state 2
    RET         shift, and go to state 44
    VOID        shift, and go to state 3
    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28
    '{'         shift, and go to state 16

    $default  reduce using rule 66 (block_item_list_opt)

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 46
    declaration                go to state 47
    type_specifier             go to state 48
    statement                  go to state 49
    compound_statement         go to state 50
    block_item                 go to state 85
    expression_statement       go to state 54
    selection_statement        go to state 55
    expression_opt             go to state 56
    iteration_statement        go to state 57
    jump_statement             go to state 58


state 53

   67 block_item_list: block_item .

    $default  reduce using rule 67 (block_item_list)


state 54

   61 statement: expression_statement .

    $default  reduce using rule 61 (statement)


state 55

   62 statement: selection_statement .

    $default  reduce using rule 62 (statement)


state 56

   71 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 86


state 57

   63 statement: iteration_statement .

    $default  reduce using rule 63 (statement)


state 58

   64 statement: jump_statement .

    $default  reduce using rule 64 (statement)


state 59

   51 direct_declarator: ID '(' . parameter_list_opt ')'

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    type_specifier         go to state 87
    parameter_list         go to state 88
    parameter_list_opt     go to state 89
    parameter_declaration  go to state 90


state 60

   50 direct_declarator: ID '[' . INT_CONST ']'

    INT_CONST  shift, and go to state 91


state 61

    5 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 92


state 62

    8 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression            go to state 29
    postfix_expression            go to state 30
    argument_expression_list_opt  go to state 93
    argument_expression_list      go to state 94
    unary_operator                go to state 31
    unary_expression              go to state 32
    multiplicative_expression     go to state 33
    additive_expression           go to state 34
    relational_expression         go to state 35
    equality_expression           go to state 36
    logical_AND_expression        go to state 37
    logical_OR_expression         go to state 38
    conditional_expression        go to state 39
    assignment_expression         go to state 95


state 63

    7 postfix_expression: postfix_expression '[' . expression ']'

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 96


state 64

   17 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 17 (unary_expression)


state 65

   40 assignment_expression: unary_expression '=' . assignment_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 97


state 66

   19 multiplicative_expression: multiplicative_expression '*' . unary_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression  go to state 29
    postfix_expression  go to state 30
    unary_operator      go to state 31
    unary_expression    go to state 98


state 67

   20 multiplicative_expression: multiplicative_expression '/' . unary_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression  go to state 29
    postfix_expression  go to state 30
    unary_operator      go to state 31
    unary_expression    go to state 99


state 68

   21 multiplicative_expression: multiplicative_expression '%' . unary_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression  go to state 29
    postfix_expression  go to state 30
    unary_operator      go to state 31
    unary_expression    go to state 100


state 69

   24 additive_expression: additive_expression '-' . multiplicative_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 102


state 70

   23 additive_expression: additive_expression '+' . multiplicative_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 103


state 71

   28 relational_expression: relational_expression LE_OPT . additive_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 33
    additive_expression        go to state 104


state 72

   29 relational_expression: relational_expression GE_OPT . additive_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 33
    additive_expression        go to state 105


state 73

   26 relational_expression: relational_expression '<' . additive_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 33
    additive_expression        go to state 106


state 74

   27 relational_expression: relational_expression '>' . additive_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 33
    additive_expression        go to state 107


state 75

   31 equality_expression: equality_expression EQ_OPT . relational_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 108


state 76

   32 equality_expression: equality_expression NE_OPT . relational_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 109


state 77

   34 logical_AND_expression: logical_AND_expression AND_OPT . equality_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 110


state 78

   36 logical_OR_expression: logical_OR_expression OR_OPT . logical_AND_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 111


state 79

   38 conditional_expression: logical_OR_expression '?' . expression ':' conditional_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 112


state 80

   75 iteration_statement: FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 46
    expression_opt             go to state 113


state 81

   72 selection_statement: IF '(' . expression ')' statement
   73                    | IF '(' . expression ')' statement ELSE statement

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 114


state 82

   76 jump_statement: RET expression_opt . ';'

    ';'  shift, and go to state 115


state 83

   43 init_declarator: declarator .
   44                | declarator . '=' initializer

    '='  shift, and go to state 15

    $default  reduce using rule 43 (init_declarator)


state 84

   65 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 65 (compound_statement)


state 85

   68 block_item_list: block_item_list block_item .

    $default  reduce using rule 68 (block_item_list)


state 86

   71 expression_statement: expression_opt ';' .

    $default  reduce using rule 71 (expression_statement)


state 87

   57 parameter_declaration: type_specifier . pointer_opt identifier_opt

    '*'  shift, and go to state 8

    pointer      go to state 11
    pointer_opt  go to state 116


state 88

   55 parameter_list: parameter_list . ',' parameter_declaration
   56 parameter_list_opt: parameter_list .

    ','  shift, and go to state 117

    $default  reduce using rule 56 (parameter_list_opt)


state 89

   51 direct_declarator: ID '(' parameter_list_opt . ')'

    ')'  shift, and go to state 118


state 90

   54 parameter_list: parameter_declaration .

    $default  reduce using rule 54 (parameter_list)


state 91

   50 direct_declarator: ID '[' INT_CONST . ']'

    ']'  shift, and go to state 119


state 92

    5 primary_expression: '(' expression ')' .

    $default  reduce using rule 5 (primary_expression)


state 93

    8 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 120


state 94

    9 argument_expression_list_opt: argument_expression_list .
   11 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 121

    $default  reduce using rule 9 (argument_expression_list_opt)


state 95

   10 argument_expression_list: assignment_expression .

    $default  reduce using rule 10 (argument_expression_list)


state 96

    7 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 122


state 97

   40 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 40 (assignment_expression)


state 98

   19 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 19 (multiplicative_expression)


state 99

   20 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 20 (multiplicative_expression)


state 100

   21 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 21 (multiplicative_expression)


state 101

   18 multiplicative_expression: unary_expression .

    $default  reduce using rule 18 (multiplicative_expression)


state 102

   19 multiplicative_expression: multiplicative_expression . '*' unary_expression
   20                          | multiplicative_expression . '/' unary_expression
   21                          | multiplicative_expression . '%' unary_expression
   24 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 24 (additive_expression)


state 103

   19 multiplicative_expression: multiplicative_expression . '*' unary_expression
   20                          | multiplicative_expression . '/' unary_expression
   21                          | multiplicative_expression . '%' unary_expression
   23 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 23 (additive_expression)


state 104

   23 additive_expression: additive_expression . '+' multiplicative_expression
   24                    | additive_expression . '-' multiplicative_expression
   28 relational_expression: relational_expression LE_OPT additive_expression .

    '-'  shift, and go to state 69
    '+'  shift, and go to state 70

    $default  reduce using rule 28 (relational_expression)


state 105

   23 additive_expression: additive_expression . '+' multiplicative_expression
   24                    | additive_expression . '-' multiplicative_expression
   29 relational_expression: relational_expression GE_OPT additive_expression .

    '-'  shift, and go to state 69
    '+'  shift, and go to state 70

    $default  reduce using rule 29 (relational_expression)


state 106

   23 additive_expression: additive_expression . '+' multiplicative_expression
   24                    | additive_expression . '-' multiplicative_expression
   26 relational_expression: relational_expression '<' additive_expression .

    '-'  shift, and go to state 69
    '+'  shift, and go to state 70

    $default  reduce using rule 26 (relational_expression)


state 107

   23 additive_expression: additive_expression . '+' multiplicative_expression
   24                    | additive_expression . '-' multiplicative_expression
   27 relational_expression: relational_expression '>' additive_expression .

    '-'  shift, and go to state 69
    '+'  shift, and go to state 70

    $default  reduce using rule 27 (relational_expression)


state 108

   26 relational_expression: relational_expression . '<' additive_expression
   27                      | relational_expression . '>' additive_expression
   28                      | relational_expression . LE_OPT additive_expression
   29                      | relational_expression . GE_OPT additive_expression
   31 equality_expression: equality_expression EQ_OPT relational_expression .

    LE_OPT  shift, and go to state 71
    GE_OPT  shift, and go to state 72
    '<'     shift, and go to state 73
    '>'     shift, and go to state 74

    $default  reduce using rule 31 (equality_expression)


state 109

   26 relational_expression: relational_expression . '<' additive_expression
   27                      | relational_expression . '>' additive_expression
   28                      | relational_expression . LE_OPT additive_expression
   29                      | relational_expression . GE_OPT additive_expression
   32 equality_expression: equality_expression NE_OPT relational_expression .

    LE_OPT  shift, and go to state 71
    GE_OPT  shift, and go to state 72
    '<'     shift, and go to state 73
    '>'     shift, and go to state 74

    $default  reduce using rule 32 (equality_expression)


state 110

   31 equality_expression: equality_expression . EQ_OPT relational_expression
   32                    | equality_expression . NE_OPT relational_expression
   34 logical_AND_expression: logical_AND_expression AND_OPT equality_expression .

    EQ_OPT  shift, and go to state 75
    NE_OPT  shift, and go to state 76

    $default  reduce using rule 34 (logical_AND_expression)


state 111

   34 logical_AND_expression: logical_AND_expression . AND_OPT equality_expression
   36 logical_OR_expression: logical_OR_expression OR_OPT logical_AND_expression .

    AND_OPT  shift, and go to state 77

    $default  reduce using rule 36 (logical_OR_expression)


state 112

   38 conditional_expression: logical_OR_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 123


state 113

   75 iteration_statement: FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 124


state 114

   72 selection_statement: IF '(' expression . ')' statement
   73                    | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 125


state 115

   76 jump_statement: RET expression_opt ';' .

    $default  reduce using rule 76 (jump_statement)


state 116

   57 parameter_declaration: type_specifier pointer_opt . identifier_opt

    ID  shift, and go to state 126

    identifier_opt  go to state 127


state 117

   55 parameter_list: parameter_list ',' . parameter_declaration

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    type_specifier         go to state 87
    parameter_declaration  go to state 128


state 118

   51 direct_declarator: ID '(' parameter_list_opt ')' .

    $default  reduce using rule 51 (direct_declarator)


state 119

   50 direct_declarator: ID '[' INT_CONST ']' .

    $default  reduce using rule 50 (direct_declarator)


state 120

    8 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 8 (postfix_expression)


state 121

   11 argument_expression_list: argument_expression_list ',' . assignment_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 129


state 122

    7 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 7 (postfix_expression)


state 123

   38 conditional_expression: logical_OR_expression '?' expression ':' . conditional_expression

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 101
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 130


state 124

   75 iteration_statement: FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 46
    expression_opt             go to state 131


state 125

   72 selection_statement: IF '(' expression ')' . statement
   73                    | IF '(' expression ')' . statement ELSE statement

    FOR         shift, and go to state 42
    IF          shift, and go to state 43
    RET         shift, and go to state 44
    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28
    '{'         shift, and go to state 16

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 46
    statement                  go to state 132
    compound_statement         go to state 50
    expression_statement       go to state 54
    selection_statement        go to state 55
    expression_opt             go to state 56
    iteration_statement        go to state 57
    jump_statement             go to state 58


state 126

   58 identifier_opt: ID .

    $default  reduce using rule 58 (identifier_opt)


state 127

   57 parameter_declaration: type_specifier pointer_opt identifier_opt .

    $default  reduce using rule 57 (parameter_declaration)


state 128

   55 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 55 (parameter_list)


state 129

   11 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 11 (argument_expression_list)


state 130

   38 conditional_expression: logical_OR_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 38 (conditional_expression)


state 131

   75 iteration_statement: FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 133


state 132

   72 selection_statement: IF '(' expression ')' statement .
   73                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 134

    ELSE      [reduce using rule 72 (selection_statement)]
    $default  reduce using rule 72 (selection_statement)


state 133

   75 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 46
    expression_opt             go to state 135


state 134

   73 selection_statement: IF '(' expression ')' statement ELSE . statement

    FOR         shift, and go to state 42
    IF          shift, and go to state 43
    RET         shift, and go to state 44
    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28
    '{'         shift, and go to state 16

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 46
    statement                  go to state 136
    compound_statement         go to state 50
    expression_statement       go to state 54
    selection_statement        go to state 55
    expression_opt             go to state 56
    iteration_statement        go to state 57
    jump_statement             go to state 58


state 135

   75 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 137


state 136

   73 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 73 (selection_statement)


state 137

   75 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    FOR         shift, and go to state 42
    IF          shift, and go to state 43
    RET         shift, and go to state 44
    ID          shift, and go to state 20
    INT_CONST   shift, and go to state 21
    CHAR_CONST  shift, and go to state 22
    STR_LIT     shift, and go to state 23
    '('         shift, and go to state 24
    '&'         shift, and go to state 25
    '*'         shift, and go to state 26
    '-'         shift, and go to state 27
    '!'         shift, and go to state 28
    '{'         shift, and go to state 16

    primary_expression         go to state 29
    postfix_expression         go to state 30
    unary_operator             go to state 31
    unary_expression           go to state 32
    multiplicative_expression  go to state 33
    additive_expression        go to state 34
    relational_expression      go to state 35
    equality_expression        go to state 36
    logical_AND_expression     go to state 37
    logical_OR_expression      go to state 38
    conditional_expression     go to state 39
    assignment_expression      go to state 45
    expression                 go to state 46
    statement                  go to state 138
    compound_statement         go to state 50
    expression_statement       go to state 54
    selection_statement        go to state 55
    expression_opt             go to state 56
    iteration_statement        go to state 57
    jump_statement             go to state 58


state 138

   75 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 75 (iteration_statement)
