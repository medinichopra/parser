Terminals which are not used

   I_CONSTANT
   INT
   CHAR
   IF
   ELSE
   VOID
   RETURN
   FOR
   PUNC
   "+"
   "-"


Grammar

    0 $accept: statement $end

    1 statement: expression

    2 primary_expression: IDENTIFIER
    3                   | CONSTANT
    4                   | STRLIT
    5                   | '(' expression ')'

    6 postfix_expression: primary_expression
    7                   | postfix_expression '[' expression ']'
    8                   | postfix_expression '(' argument_expression_list ')'
    9                   | postfix_expression PTR_OP IDENTIFIER

   10 argument_expression_list: assignment_expression
   11                         | argument_expression_list ',' assignment_expression

   12 unary_expression: postfix_expression
   13                 | unary_operator unary_expression

   14 unary_operator: '&'
   15               | '*'
   16               | '+'
   17               | '-'
   18               | '!'

   19 multiplicative_expression: unary_expression
   20                          | multiplicative_expression '*' unary_expression
   21                          | multiplicative_expression '/' unary_expression
   22                          | multiplicative_expression '%' unary_expression

   23 additive_expression: multiplicative_expression
   24                    | additive_expression '+' multiplicative_expression
   25                    | additive_expression '-' multiplicative_expression

   26 relational_expression: additive_expression
   27                      | relational_expression '<' additive_expression
   28                      | relational_expression '>' additive_expression
   29                      | relational_expression LE_OP additive_expression
   30                      | relational_expression GE_OP additive_expression

   31 equality_expression: relational_expression
   32                    | equality_expression EQ_OP relational_expression
   33                    | equality_expression NE_OP relational_expression

   34 logical_AND_expression: equality_expression
   35                       | logical_AND_expression AND_OP equality_expression

   36 logical_OR_expression: logical_AND_expression
   37                      | logical_OR_expression OR_OP logical_AND_expression

   38 conditional_expression: logical_OR_expression
   39                       | logical_OR_expression '?' expression ':' conditional_expression

   40 assignment_expression: conditional_expression
   41                      | unary_expression '=' assignment_expression

   42 expression: assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 18
'%' (37) 22
'&' (38) 14
'(' (40) 5 8
')' (41) 5 8
'*' (42) 15 20
'+' (43) 16 24
',' (44) 11
'-' (45) 17 25
'/' (47) 21
':' (58) 39
'<' (60) 27
'=' (61) 41
'>' (62) 28
'?' (63) 39
'[' (91) 7
']' (93) 7
error (256)
IDENTIFIER (258) 2 9
CONSTANT (259) 3
I_CONSTANT (260)
STRLIT (261) 4
INT (262)
CHAR (263)
IF (264)
ELSE (265)
VOID (266)
RETURN (267)
FOR (268)
AND_OP (269) 35
OR_OP (270) 37
LE_OP (271) 29
GE_OP (272) 30
EQ_OP (273) 32
NE_OP (274) 33
PTR_OP (275) 9
PUNC (276)
"+" (277)
"-" (278)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
statement (42)
    on left: 1, on right: 0
primary_expression (43)
    on left: 2 3 4 5, on right: 6
postfix_expression (44)
    on left: 6 7 8 9, on right: 7 8 9 12
argument_expression_list (45)
    on left: 10 11, on right: 8 11
unary_expression (46)
    on left: 12 13, on right: 13 19 20 21 22 41
unary_operator (47)
    on left: 14 15 16 17 18, on right: 13
multiplicative_expression (48)
    on left: 19 20 21 22, on right: 20 21 22 23 24 25
additive_expression (49)
    on left: 23 24 25, on right: 24 25 26 27 28 29 30
relational_expression (50)
    on left: 26 27 28 29 30, on right: 27 28 29 30 31 32 33
equality_expression (51)
    on left: 31 32 33, on right: 32 33 34 35
logical_AND_expression (52)
    on left: 34 35, on right: 35 36 37
logical_OR_expression (53)
    on left: 36 37, on right: 37 38 39
conditional_expression (54)
    on left: 38 39, on right: 39 40
assignment_expression (55)
    on left: 40 41, on right: 10 11 41 42
expression (56)
    on left: 42, on right: 1 5 7 39


state 0

    0 $accept: . statement $end

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    statement                  go to state 10
    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 13
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 17
    equality_expression        go to state 18
    logical_AND_expression     go to state 19
    logical_OR_expression      go to state 20
    conditional_expression     go to state 21
    assignment_expression      go to state 22
    expression                 go to state 23


state 1

    2 primary_expression: IDENTIFIER .

    $default  reduce using rule 2 (primary_expression)


state 2

    3 primary_expression: CONSTANT .

    $default  reduce using rule 3 (primary_expression)


state 3

    4 primary_expression: STRLIT .

    $default  reduce using rule 4 (primary_expression)


state 4

   17 unary_operator: '-' .

    $default  reduce using rule 17 (unary_operator)


state 5

    5 primary_expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 13
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 17
    equality_expression        go to state 18
    logical_AND_expression     go to state 19
    logical_OR_expression      go to state 20
    conditional_expression     go to state 21
    assignment_expression      go to state 22
    expression                 go to state 24


state 6

   14 unary_operator: '&' .

    $default  reduce using rule 14 (unary_operator)


state 7

   15 unary_operator: '*' .

    $default  reduce using rule 15 (unary_operator)


state 8

   16 unary_operator: '+' .

    $default  reduce using rule 16 (unary_operator)


state 9

   18 unary_operator: '!' .

    $default  reduce using rule 18 (unary_operator)


state 10

    0 $accept: statement . $end

    $end  shift, and go to state 25


state 11

    6 postfix_expression: primary_expression .

    $default  reduce using rule 6 (postfix_expression)


state 12

    7 postfix_expression: postfix_expression . '[' expression ']'
    8                   | postfix_expression . '(' argument_expression_list ')'
    9                   | postfix_expression . PTR_OP IDENTIFIER
   12 unary_expression: postfix_expression .

    PTR_OP  shift, and go to state 26
    '('     shift, and go to state 27
    '['     shift, and go to state 28

    $default  reduce using rule 12 (unary_expression)


state 13

   19 multiplicative_expression: unary_expression .
   41 assignment_expression: unary_expression . '=' assignment_expression

    '='  shift, and go to state 29

    $default  reduce using rule 19 (multiplicative_expression)


state 14

   13 unary_expression: unary_operator . unary_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression  go to state 11
    postfix_expression  go to state 12
    unary_expression    go to state 30
    unary_operator      go to state 14


state 15

   20 multiplicative_expression: multiplicative_expression . '*' unary_expression
   21                          | multiplicative_expression . '/' unary_expression
   22                          | multiplicative_expression . '%' unary_expression
   23 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33

    $default  reduce using rule 23 (additive_expression)


state 16

   24 additive_expression: additive_expression . '+' multiplicative_expression
   25                    | additive_expression . '-' multiplicative_expression
   26 relational_expression: additive_expression .

    '-'  shift, and go to state 34
    '+'  shift, and go to state 35

    $default  reduce using rule 26 (relational_expression)


state 17

   27 relational_expression: relational_expression . '<' additive_expression
   28                      | relational_expression . '>' additive_expression
   29                      | relational_expression . LE_OP additive_expression
   30                      | relational_expression . GE_OP additive_expression
   31 equality_expression: relational_expression .

    LE_OP  shift, and go to state 36
    GE_OP  shift, and go to state 37
    '<'    shift, and go to state 38
    '>'    shift, and go to state 39

    $default  reduce using rule 31 (equality_expression)


state 18

   32 equality_expression: equality_expression . EQ_OP relational_expression
   33                    | equality_expression . NE_OP relational_expression
   34 logical_AND_expression: equality_expression .

    EQ_OP  shift, and go to state 40
    NE_OP  shift, and go to state 41

    $default  reduce using rule 34 (logical_AND_expression)


state 19

   35 logical_AND_expression: logical_AND_expression . AND_OP equality_expression
   36 logical_OR_expression: logical_AND_expression .

    AND_OP  shift, and go to state 42

    $default  reduce using rule 36 (logical_OR_expression)


state 20

   37 logical_OR_expression: logical_OR_expression . OR_OP logical_AND_expression
   38 conditional_expression: logical_OR_expression .
   39                       | logical_OR_expression . '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 43
    '?'    shift, and go to state 44

    $default  reduce using rule 38 (conditional_expression)


state 21

   40 assignment_expression: conditional_expression .

    $default  reduce using rule 40 (assignment_expression)


state 22

   42 expression: assignment_expression .

    $default  reduce using rule 42 (expression)


state 23

    1 statement: expression .

    $default  reduce using rule 1 (statement)


state 24

    5 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 45


state 25

    0 $accept: statement $end .

    $default  accept


state 26

    9 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 46


state 27

    8 postfix_expression: postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    argument_expression_list   go to state 47
    unary_expression           go to state 13
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 17
    equality_expression        go to state 18
    logical_AND_expression     go to state 19
    logical_OR_expression      go to state 20
    conditional_expression     go to state 21
    assignment_expression      go to state 48


state 28

    7 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 13
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 17
    equality_expression        go to state 18
    logical_AND_expression     go to state 19
    logical_OR_expression      go to state 20
    conditional_expression     go to state 21
    assignment_expression      go to state 22
    expression                 go to state 49


state 29

   41 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 13
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 17
    equality_expression        go to state 18
    logical_AND_expression     go to state 19
    logical_OR_expression      go to state 20
    conditional_expression     go to state 21
    assignment_expression      go to state 50


state 30

   13 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 13 (unary_expression)


state 31

   20 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression  go to state 11
    postfix_expression  go to state 12
    unary_expression    go to state 51
    unary_operator      go to state 14


state 32

   21 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression  go to state 11
    postfix_expression  go to state 12
    unary_expression    go to state 52
    unary_operator      go to state 14


state 33

   22 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression  go to state 11
    postfix_expression  go to state 12
    unary_expression    go to state 53
    unary_operator      go to state 14


state 34

   25 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 55


state 35

   24 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 56


state 36

   29 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 57


state 37

   30 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 58


state 38

   27 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 59


state 39

   28 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 60


state 40

   32 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 61


state 41

   33 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 62


state 42

   35 logical_AND_expression: logical_AND_expression AND_OP . equality_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 17
    equality_expression        go to state 63


state 43

   37 logical_OR_expression: logical_OR_expression OR_OP . logical_AND_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 17
    equality_expression        go to state 18
    logical_AND_expression     go to state 64


state 44

   39 conditional_expression: logical_OR_expression '?' . expression ':' conditional_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 13
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 17
    equality_expression        go to state 18
    logical_AND_expression     go to state 19
    logical_OR_expression      go to state 20
    conditional_expression     go to state 21
    assignment_expression      go to state 22
    expression                 go to state 65


state 45

    5 primary_expression: '(' expression ')' .

    $default  reduce using rule 5 (primary_expression)


state 46

    9 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 9 (postfix_expression)


state 47

    8 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   11 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 66
    ','  shift, and go to state 67


state 48

   10 argument_expression_list: assignment_expression .

    $default  reduce using rule 10 (argument_expression_list)


state 49

    7 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 68


state 50

   41 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 41 (assignment_expression)


state 51

   20 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 20 (multiplicative_expression)


state 52

   21 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 21 (multiplicative_expression)


state 53

   22 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 22 (multiplicative_expression)


state 54

   19 multiplicative_expression: unary_expression .

    $default  reduce using rule 19 (multiplicative_expression)


state 55

   20 multiplicative_expression: multiplicative_expression . '*' unary_expression
   21                          | multiplicative_expression . '/' unary_expression
   22                          | multiplicative_expression . '%' unary_expression
   25 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33

    $default  reduce using rule 25 (additive_expression)


state 56

   20 multiplicative_expression: multiplicative_expression . '*' unary_expression
   21                          | multiplicative_expression . '/' unary_expression
   22                          | multiplicative_expression . '%' unary_expression
   24 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '%'  shift, and go to state 33

    $default  reduce using rule 24 (additive_expression)


state 57

   24 additive_expression: additive_expression . '+' multiplicative_expression
   25                    | additive_expression . '-' multiplicative_expression
   29 relational_expression: relational_expression LE_OP additive_expression .

    '-'  shift, and go to state 34
    '+'  shift, and go to state 35

    $default  reduce using rule 29 (relational_expression)


state 58

   24 additive_expression: additive_expression . '+' multiplicative_expression
   25                    | additive_expression . '-' multiplicative_expression
   30 relational_expression: relational_expression GE_OP additive_expression .

    '-'  shift, and go to state 34
    '+'  shift, and go to state 35

    $default  reduce using rule 30 (relational_expression)


state 59

   24 additive_expression: additive_expression . '+' multiplicative_expression
   25                    | additive_expression . '-' multiplicative_expression
   27 relational_expression: relational_expression '<' additive_expression .

    '-'  shift, and go to state 34
    '+'  shift, and go to state 35

    $default  reduce using rule 27 (relational_expression)


state 60

   24 additive_expression: additive_expression . '+' multiplicative_expression
   25                    | additive_expression . '-' multiplicative_expression
   28 relational_expression: relational_expression '>' additive_expression .

    '-'  shift, and go to state 34
    '+'  shift, and go to state 35

    $default  reduce using rule 28 (relational_expression)


state 61

   27 relational_expression: relational_expression . '<' additive_expression
   28                      | relational_expression . '>' additive_expression
   29                      | relational_expression . LE_OP additive_expression
   30                      | relational_expression . GE_OP additive_expression
   32 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 36
    GE_OP  shift, and go to state 37
    '<'    shift, and go to state 38
    '>'    shift, and go to state 39

    $default  reduce using rule 32 (equality_expression)


state 62

   27 relational_expression: relational_expression . '<' additive_expression
   28                      | relational_expression . '>' additive_expression
   29                      | relational_expression . LE_OP additive_expression
   30                      | relational_expression . GE_OP additive_expression
   33 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 36
    GE_OP  shift, and go to state 37
    '<'    shift, and go to state 38
    '>'    shift, and go to state 39

    $default  reduce using rule 33 (equality_expression)


state 63

   32 equality_expression: equality_expression . EQ_OP relational_expression
   33                    | equality_expression . NE_OP relational_expression
   35 logical_AND_expression: logical_AND_expression AND_OP equality_expression .

    EQ_OP  shift, and go to state 40
    NE_OP  shift, and go to state 41

    $default  reduce using rule 35 (logical_AND_expression)


state 64

   35 logical_AND_expression: logical_AND_expression . AND_OP equality_expression
   37 logical_OR_expression: logical_OR_expression OR_OP logical_AND_expression .

    AND_OP  shift, and go to state 42

    $default  reduce using rule 37 (logical_OR_expression)


state 65

   39 conditional_expression: logical_OR_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 69


state 66

    8 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 8 (postfix_expression)


state 67

   11 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 13
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 17
    equality_expression        go to state 18
    logical_AND_expression     go to state 19
    logical_OR_expression      go to state 20
    conditional_expression     go to state 21
    assignment_expression      go to state 70


state 68

    7 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 7 (postfix_expression)


state 69

   39 conditional_expression: logical_OR_expression '?' expression ':' . conditional_expression

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    STRLIT      shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 5
    '&'         shift, and go to state 6
    '*'         shift, and go to state 7
    '+'         shift, and go to state 8
    '!'         shift, and go to state 9

    primary_expression         go to state 11
    postfix_expression         go to state 12
    unary_expression           go to state 54
    unary_operator             go to state 14
    multiplicative_expression  go to state 15
    additive_expression        go to state 16
    relational_expression      go to state 17
    equality_expression        go to state 18
    logical_AND_expression     go to state 19
    logical_OR_expression      go to state 20
    conditional_expression     go to state 71


state 70

   11 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 11 (argument_expression_list)


state 71

   39 conditional_expression: logical_OR_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 39 (conditional_expression)
